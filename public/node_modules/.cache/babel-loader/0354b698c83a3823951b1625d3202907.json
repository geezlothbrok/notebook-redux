{"ast":null,"code":"const initialState = {\n  users: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_USER\":\n      console.log(action.payload);\n      return { ...state,\n        users: [...state.users, action.payload]\n      };\n\n    case 'EDIT_USER':\n      var id = action.payload.id;\n      let updatedUserInfo = action.payload.updateUserInfo;\n      let UsersAfterUpdate = state.users.map(user => {\n        if (user.id === id) {\n          return updateUserInfo;\n        }\n\n        return user;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default usersReducer;","map":{"version":3,"sources":["/Users/GeezLuthbroke/Desktop/developer/react/user-app/src/reducers/usersReducer.js"],"names":["initialState","users","usersReducer","state","action","type","console","log","payload","id","updatedUserInfo","updateUserInfo","UsersAfterUpdate","map","user"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;;AAIA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB;AACD,aAAO,EAAE,GAAGL,KAAL;AAAWF,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAiBG,MAAM,CAACI,OAAxB;AAAlB,OAAP;;AAEH,SAAK,WAAL;AACI,UAAIC,EAAE,GAAGL,MAAM,CAACI,OAAP,CAAeC,EAAxB;AACA,UAAIC,eAAe,GAAGN,MAAM,CAACI,OAAP,CAAeG,cAArC;AACA,UAAIC,gBAAgB,GAAGT,KAAK,CAACF,KAAN,CAAYY,GAAZ,CAAiBC,IAAD,IAAU;AAC7C,YAAIA,IAAI,CAACL,EAAL,KAAYA,EAAhB,EAAoB;AAClB,iBAAOE,cAAP;AACD;;AACD,eAAOG,IAAP;AACD,OALoB,CAAvB;;AAQJ;AACI,aAAOX,KAAP;AAjBR;AAoBH,CArBD;;AAwBA,eAAeD,YAAf","sourcesContent":["const initialState = {\n    users: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"ADD_USER\":\n            console.log(action.payload)\n           return { ...state,users: [...state.users, action.payload]};\n            \n        case 'EDIT_USER' :\n            var id = action.payload.id;\n            let updatedUserInfo = action.payload.updateUserInfo\n            let UsersAfterUpdate = state.users.map((user) => {\n                if (user.id === id) {\n                  return updateUserInfo;\n                }\n                return user;\n              });\n\n    \n        default:\n            return state;\n    }\n\n};\n\n\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}